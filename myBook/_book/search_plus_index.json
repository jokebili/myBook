{"./":{"url":"./","title":"前言","keywords":"","body":"1.1.1. Introduction1.1.1. Introduction Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:35:23 "},"Chapter1/":{"url":"Chapter1/","title":"第一章","keywords":"","body":"1.2.1. 第一章1.2.1. 第一章 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter1/衣.html":{"url":"Chapter1/衣.html","title":"第1节：衣","keywords":"","body":"1.2.1.1. 第1节：衣1.2.1.2. 文件1.2.1.2.1.1. 1. 文件上传 ✔1.2.1.2.1.2. 2. 表单上传成功回调(增加html模板)✔1.2.1.2.1.3. 3. 表单数据上传✔（update）1.2.1.3. 用户表单1.2.1.3.1.1. 1. 获取用户表单集✔1.2.1.3.1.2. 2. 获取用户表单详情✔1.2.1.3.1.3. 3. 变更表单状态(开启或关闭)✔新1.2.1.3.1.4. 4. pv计数✔1.2.1.4. 用户目录1.2.1.4.1.1. 1. 新建目录✔1.2.1.4.1.2. 2. 复制目录/表单✔1.2.1.4.1.3. 3. 顶置目录/表单✔1.2.1.4.1.4. 4. 删除目录/表单✔1.2.1.4.1.5. 5. 获取用户目录集✔1.2.1.4.1.6. 6. 获取用户目录的表单集✔1.2.1.4.1.7. 7. 获取用户表单详情里的数据集（分页）✔1.2.1.4.1.8. 8. 用户表单移动到✔1.2.1.4.1.9. 9. 用户注册× (前台弃用)1.2.1.4.1.10. 10. 用户登录获取token✔1.2.1.4.1.11. 11. 用户验证token正确有效(2h)✔1.2.1.4.1.12. 12. 用户在刷新token有效期里更新过期token(3h)✔1.2.1.5. 表单设置 （new）1.2.1.5.1.1. 1. 表单数据收集 设置1.2.1.5.1.2. 2. 表单转发 设置1.2.1.6. 微信授权（new）1.2.1.6.1.1. 1. 微信公众号web aouth授权回调接口1.2.1.7. 表单规则填写校验（new）1.2.1.7.1.1. 1.表单之前获取当前微信openid对当前表单填写规则1.2.1.1. 第1节：衣 1.2.1.2. 文件 1.2.1.2.1.1. 1. 文件上传 ✔ 1.兼容 后台共享素材上传(目录或tag标签集上传) 2.兼容 前台表单上传(目录参数，表单参数：name,frombg,editorhtml) 请求URL： https://192.168.200.162:8083/api/upload/:filemd5 请求方法： POST 请求URL参数: String 文件提交类型: 二进制流提交 filemd5 hexString 文件md5值 必要 查询参数：String folder hexString 目录id 非必要 （没有目录的文件不需要） tags string 文件标签集 非必要 (tags：标签1,标签2；没有标签的文件不需要) uid hexString 表单文件所属者 非必要 (默认账号uid=\"5bf618e77320f31b5012149d\"，表单使用) name string 表单名 非必要 (表单使用名，常规共享类型文件不需要) frombg string 背景图/样式 非必要( 表单使用) editorhtml htmlString 编辑模板【弃用】 非必要( 表单使用，把html里所有的;替换成*) labels string 表单表头默认集合 非必要(labels：提交者,提交时间；表单使用) formid hexString 覆盖修改的表单id 非必要(表单覆盖式修改时需要；表单覆盖式修改使用) fn string 文件名 必要 ec bool 是否加密存储 必要 例子 : https://192.168.200.162:8083/api/upload/17f1f83492f0eff62d86fb3c22a7f9f2?fn=ChromeSetup.exe&ec=true&folder=5c0a2d557320f34f70a46b20&name=春运&labels=提交者,提交时间 响应例子： 成功： { \"ok\": true, //响应状态标识 \"changes\": 1, //资源命中数量 \"data\": { //响应数据 \"dlurl\": \"https://192.168.200.162:8083/api/dl/5c0775797320f326f861f9cb?id=5c0775797320f326f861f9cb\", //文件外链 \"id\":\"5c0775797320f326f861f9cb\" //表单文件id } } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.2.1.2. 2. 表单上传成功回调(增加html模板)✔ 请求URL： https://192.168.200.162:8083/api/update/form/:formid 请求方法： POST 请求URL参数: formid hexString 表单id 必要 请求body: String //ajax 直接把div模板按字符串传给data即可 例子 : https://192.168.200.162:8083/api/update/form/5c1719e17320f3242cd55701 响应例子： 成功： { ok: true, changes: 1, data: \"5c17199b7320f3242cd55700\" } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.2.1.3. 3. 表单数据上传✔（update） 请求URL： https://192.168.200.162:8083/api/v1/form/data/:formid 请求方法： POST 请求URL参数: formid hexString 表单id 必要 openid string 当前微信账号openid 必要 【新增2019-4-17】 请求body数据: JSON object:(key-value 数量任意) /// { \"author\":\"aswa333就\", \"desc\":\"描述....balabala\", \"other\":\"其他任意属性\" } 例子 : https://192.168.200.162:8083/api/v1/form/data/5c0f3acc7320f31910e7bc63 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.3. 用户表单 1.2.1.3.1.1. 1. 获取用户表单集✔ 请求URL：https://192.168.200.162:8083/api/v1/user/:uid/form/files 请求方法： GET 请求URL参数: string uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") 例子 :https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/form/files 响应例子： 成功： { \"ok\": true, \"changes\": 2, \"data\": [ { \"_id\": \"5c1852277320f32ee0b4b760\", \"name\": \"未知名\" }, { \"_id\": \"5c185dc27320f30544150d2a\", \"name\": \"xiaoks\" } ] } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.3.1.2. 2. 获取用户表单详情✔ 请求URL：https://192.168.200.162:8083/api/v1/user/:uid/form/files/:formid 请求方法： GET 请求URL参数: string uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") formid hexString 表单id 必要 例子 :https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/form/files/5c1883a07320f315f88f3568 响应例子： 成功： { \"ok\": true, \"changes\": 1, \"data\": { \"_id\": \"5c1883a07320f315f88f3568\", \"authority\": \"所有人可填\", \"contenttype\": \"text/html\", \"createat\": \"2018-12-18 14:17:06\", \"dataList\": [ { \"\\\"datetime\\\"\": \"\", \"\\\"describe\\\"\": \"\", \"\\\"newdata\\\"\": \"\", \"\\\"rad61039\\\"\": \"默认1\", \"_id\": \"5c189da752c0508043c5c57b\", \"createat\": \"2018-12-18T15:11:35.579+08:00\", \"formfileid\": \"5c1852277320f32ee0b4b760\", \"pv\": 0 }, { \"\\\"datetime\\\"\": \"\", \"\\\"describe\\\"\": \"\", \"\\\"newdata\\\"\": \"\", \"\\\"rad61039\\\"\": \"默认1\", \"_id\": \"5c170dd152c0508043c55e35\", \"createat\": \"2018-12-17T10:45:37.971+08:00\", \"formfileid\": \"5c1362657320f33a6c3123c6\", \"pv\": 0 } ], \"dlurl\": \"https://192.168.200.162:8083/api/dl/5c1883a07320f315f88f3568.html?id=xxx\", \"editorhtml\": \"\", \"formtotals\": 6, \"isactive\": false, \"isclose\": false, \"name\": \"fangjia放假\", \"oldfilename\": \"JSON-handle.html\", \"pv\": 0, \"resultpv\": 10, \"resultspv\": 100, \"todaypush\": 2, \"updateat\": \"0001-01-01T00:00:00Z\" } } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.3.1.3. 3. 变更表单状态(开启或关闭)✔新 请求URL：https://192.168.200.162:8083/api/v1/user/:uid/form/state/:formid 请求方法： GET 请求URL参数: string uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") formid hexString 表单id 必要 (任何时候都取反更新) 例子 :https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/form/state/5c1852277320f32ee0b4b760 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.3.1.4. 4. pv计数✔ 请求URL： https://192.168.200.162:8083/api/v1/form/pv/:oid 请求方法：GET 请求URL参数: oid hexString 表单或表单数据 oid 必要 例子 : https://192.168.200.162:8083/api/v1/form/pv/5c10a86d7320f332c83a55e6 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4. 用户目录 1.2.1.4.1.1. 1. 新建目录✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/folders 请求方法： POST 请求URL参数: String uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") foldername string 文件目录名 必要 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/folders?foldername=深圳 响应例子： 成功： { \"ok\": true, \"changes\": 1, \"data\": { \"id\": \"5c0a06b27320f32d30457d7e\", //目录id \"createat\": \"2018-12-07T13:35:46.519496+08:00\", \"updateat\": \"0001-01-01T00:00:00Z\", \"userid\": \"5bf618e77320f31b5012149d\", //userid \"foldername\": \"深圳\" //目录名称 } } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.2. 2. 复制目录/表单✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/copy/:oid 请求方法： POST 请求URL参数: String uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") oid hexString 表单或目录id 必要 (当复制目录时 需要带上下面的查询参数folder) 查询参数: Bool folder bool 复制目录标识 非必要 (使用时和上面的目录id一起使用，表示操作时目录复制) folderid hexString 目录id 非必要 （当在目录里复制表单时需要此目录id） name string 目录/表单重命名 必要 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/copy/5c0df6ca7320f32908338ee1 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.3. 3. 顶置目录/表单✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/top/:oid 请求方法： GET uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") oid hexString 表单或目录id 必要 (当复制目录时 需要带上下面的查询参数folder) 查询参数: Bool folder bool 复制目录标识 非必要 (使用时和上面的目录id一起使用，表示操作时目录复制) 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/top/5c0df6ca7320f32908338ee1 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.4. 4. 删除目录/表单✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/del/:oid 请求方法： DELETE 请求URL参数: String uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") oid hexString 表单或目录id 必要 (当删除目录时 需要带上下面的查询参数folder) 查询参数: Bool folder bool 删除目录标识 非必要 (使用时和上面的目录id一起使用，表示操作的是目录) 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/del/5c0e1b427320f3197cc799b9 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.5. 5. 获取用户目录集✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/folders 请求方法： GET 请求URL参数: String uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/folders 响应例子： 成功： { \"ok\": true, \"changes\": 3, \"data\": [ { \"_id\": \"5c11ea807320f32f74c743b8\", \"createat\": \"2018-12-12T11:35:30.381+08:00\", \"filecount\": 0, //目录里表单数量 \"foldername\": \"ertrtytyu\", \"toptime\": \"2018-12-13T13:13:36.018+08:00\" }, { \"_id\": \"5c11bdf97320f33324d496b5\", \"createat\": \"2018-12-12T11:35:30.381+08:00\", \"filecount\": 0, \"foldername\": \"文件\", \"toptime\": \"2018-12-13T10:03:37.173+08:00\" }, { \"_id\": \"5c11b6ba7320f32e685ac8e2\", \"createat\": \"2018-12-12T11:35:30.381+08:00\", \"filecount\": 13, \"foldername\": \"副本副本xx科学\", \"toptime\": \"2018-12-13T09:32:42.151+08:00\" } ] } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.6. 6. 获取用户目录的表单集✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/folder/:folderid 请求方法： GET 请求URL参数: String uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") folderid hexString 目录id 必要 例子 :https://127.0.0.1:8083/api/v1/user/5bf618e77320f31b5012149d/folder/5c0a2d557320f34f70a46b20 响应例子： 成功： { \"ok\": true, \"changes\": 2, \"data\": [ { \"_id\": \"5c1852277320f32ee0b4b760\", \"name\": \"未知名\" }, { \"_id\": \"5c185dc27320f30544150d2a\", \"name\": \"xiaoks\" } ] } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.7. 7. 获取用户表单详情里的数据集（分页）✔ 请求URL：https://192.168.200.162:8083/api/v1/user/:uid/form/data/:formid 请求方法： GET 请求URL参数: uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") formid hexString 目录id 必要 查询字符串: currentPage int 当前页码数 必要 (第几页，2代表第二页) showCount int 每页展示的数据量 必要 （每页数据量，一般固定的，20条/页） 例子 : https://192.168.200.162:8083/api/v1/user/5bf618e77320f31b5012149d/form/data/5c0f8c677320f34fc400e1ae?currentPage=2&showCount=20 响应例子： 成功： { \"ok\": true, \"changes\": 1, \"data\": { \"currentPage\": 0, \"dataList\": [ { \"_id\": \"5c105b9693844fba510aa3fc\", \"author\": \"明明aswa333就\", \"createat\": \"2018-12-12T08:51:34.488+08:00\", \"desc\": \"描述....balabala\", \"formfileid\": \"5c0f8c677320f34fc400e1ae\", \"other\": \"其他任意属性\" } ], \"showCount\": 10, \"totalPage\": 1, \"totalResult\": 1 } } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.8. 8. 用户表单移动到✔ 请求URL： https://192.168.200.162:8083/api/v1/user/:uid/form/:formid/:folderid 请求方法： POST 请求URL参数: uid hexString 账号id 必要 (默认账号uid=\"5bf618e77320f31b5012149d\") formid hexString 表单文件iod 必要 folderid hexString 目录iod 必要 例子 : https://192.168.200.162:8083/api/v1/user/:uid/form/5c10a86d7320f332c83a55e6/5c1082027320f328e049830e 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.9. 9. 用户注册× (前台弃用) 请求URL： https://192.168.200.162:8083/api/v1/user/register 请求方法： POST 请求body数据: JSON { //// key的值必须都是字符串，不能包含数字 \"pwd\":\"123456pwd\", //密码 \"name\":\"xxx\",//账号别名, \"phone\":\"10086\" //电话号码 唯一约束 （登录使用） } 例子 : https://192.168.200.162:8083/api/v1/user/register 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.10. 10. 用户登录获取token✔ 登录获取的token添加到headers的Authorization字段来提交本次请求鉴权 请求URL： https://192.168.200.162:8083/api/v1/login/user 请求方法： POST 请求body数据: JSON { \"phone\":\"xxx\", //账号名(登录名) \"pwd\":\"123456pwd\", //密码 } 例子 : https://192.168.200.162:8083/api/v1/login/user 响应例子： 成功： { \"ok\": true, \"changes\": 1, \"data\": { \"refresh_token\": \"5c1865a87320f3472cca43fd\", \"refresh_token_exp\": 10800, \"token\": \"5c1865a87320f3472cca43fb\", \"token_exp\": 7200, \"user_mini_info\": { \"id\": \"5c18547a52c0508043c594d6\", \"name\": \"路人甲\", \"phone\": \"uid10000000\", \"rule\": \"用户\", \"uid\": \"UserDemo\" } } } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.11. 11. 用户验证token正确有效(2h)✔ 请求URL： https://192.168.200.162:8083/api/v1/sys/check 请求方法： POST 请求body数据: JSON { \"token\":\"5c14645c7320f334b09e1ecf\" //待验证的token } 例子 : https://192.168.200.162:8083/api/v1/sys/check 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"message\": \"xxx error\" //错误信息 } 1.2.1.4.1.12. 12. 用户在刷新token有效期里更新过期token(3h)✔ 请求URL： https://192.168.200.162:8083/api/v1/sys/token/refresh 请求方法： POST 请求body数据: JSON { \"refresh_token\":\"5c14645c7320f334b09e1ed1\" //待验证的刷新token } 例子 : https://192.168.200.162:8083/api/v1/sys/token/refresh 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"errcode\": 1006, \"message\": \"token已过期，请重点登陆\" } 1.2.1.5. 表单设置 （new） 1.2.1.5.1.1. 1. 表单数据收集 设置 请求URL： https://192.168.200.162:8083/api/v1/from/set/:oid 请求方法： POST 路径参数：oid stringhex 表单id URL查询参数: 键值对 字符串 issharewx bool 是否在微信中分享 true值表示 是 必要 startat stringtime 表单的开始时间 必要 endat stringtime 表单的结束时间 必要 rluefrom string 表单填写规则(不限定次数\"0\",每天一次(根据openid)\"1\",每个微信号一次(根据openid)\"2\") 必要 wxoauth string 收集 填写者微信信息方式 静默时\"0\",点击确认:\"1\" 必要 例子 : https://192.168.200.162:8083/api/v1/from/set/5c14645c7320f334b09e1ed1?issharewx=true&startat=xxx&endat=xxx&rluefrom=0&wxoauth=0 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"errcode\": 1006, \"message\": \"token已过期，请重点登陆\" } 1.2.1.5.1.2. 2. 表单转发 设置 请求URL： https://192.168.200.162:8083/api/v1/from/share/set/:oid 请求方法： POST 路径参数：oid stringhex 表单id URL查询参数: 键值对 字符串 imgtype uint 微信分享封面图像类型 0值表示 自定义 必要 imgurl string 图像类型为0时必要填wxsharetitle string 微信分享封面标题 必要 wxsharedesc string 微信分享封面描述 必要 例子 : https://192.168.200.162:8083/api/v1/from/set/5c14645c7320f334b09e1ed1?imgtype=0&imgurl=https://xxx.com/xx.png&wxsharetitle=标题&wxsharedesc=表述 响应例子： 成功： { \"ok\": true, \"changes\": 1 } 失败： { \"ok\": false, \"errcode\": 1006, \"message\": \"xxx\" } 1.2.1.6. 微信授权（new） 1.2.1.6.1.1. 1. 微信公众号web aouth授权回调接口 请求URL： https://192.168.200.162:8083/api/v1/oauth/wxuser 请求方法： GET 路径参数：oid stringhex 表单id URL查询参数: 键值对 字符串 code string 腾讯回调参数code 必要 例子 : https://192.168.200.162:8083/api/v1/oauth/wxuser?code=xxxxx 响应例子： 成功： 返回一个前端页面URL重定向，附带有userinfo base64编码的json字符串对象 失败： { \"ok\": false, \"errcode\": 1006, \"message\": \"静默授权失败\" } 1.2.1.7. 表单规则填写校验（new） 1.2.1.7.1.1. 1.表单之前获取当前微信openid对当前表单填写规则 请求URL： https://192.168.200.162:8083/api/v1/oauth/formrule 请求方法： GET URL查询参数: 键值对 字符串 openid string 目前微信用户openid 必要formid stringhex 当前表单页的oid 必要 例子 : https://192.168.200.162:8083/api/v1/oauth/formrule?openid=xxxxxx&formid=xxxxxxx 响应例子： 成功： { \"ok\": true, \"changes\": 1, \"data\":{ \"isPost\":true, \"denyMsg\":\"\" } } 失败： { \"ok\": false, \"errcode\": 1006, \"data\":{ \"isPost\":false, \"denyMsg\":\"xxxx具体违反规则描述\" } } Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-28 11:44:32 "},"Chapter1/食.html":{"url":"Chapter1/食.html","title":"第2节：食","keywords":"","body":"1.2.2.1. 第2节：食1.2.2.1. 第2节：食 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter1/住.html":{"url":"Chapter1/住.html","title":"第3节：住","keywords":"","body":"1.2.3.1. 第3节：住1.2.3.1. 第3节：住 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter1/行.html":{"url":"Chapter1/行.html","title":"第4节：行","keywords":"","body":"1.2.4.1. 第4节：行1.2.4.1. 第4节：行 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter2/":{"url":"Chapter2/","title":"第二章","keywords":"","body":"1.3.1. 第二章1.3.1. 第二章 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter3/":{"url":"Chapter3/","title":"第三章","keywords":"","body":"1.4.1. 第三章1.4.1. 第三章 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "},"Chapter4/":{"url":"Chapter4/","title":"第四章","keywords":"","body":"1.5.1. 第四章1.5.1. 第四章 Copyright & pypygo.com 2018 all right reserved，powered by Gitbook该文件修订时间： 2019-05-27 09:36:10 "}}